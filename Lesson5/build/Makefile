# the prime target
EXE := StudentMgr
# shared libraries
solibrary := libstu.so
# source files
SOURCES := $(wildcard *.cpp)
# objects
OBJS := $(patsubst %.cpp,%.o,$(wildcard *.cpp))
mains := main.o
others := $(filter-out $(mains),$(OBJS))
# the compiler
CXX := g++
# to show all the warnings
CPPFLAGS := -Wall

# generate the executable, linking to shared libraries
$(EXE) : $(mains) $(solibrary)
	$(CXX) $(mains) $(solibrary) -o $(EXE)

# build a shared library
$(solibrary) : $(others)
	$(CXX) -shared -o $(solibrary) $(others)

# generate objects
# the main object
$(mains):%.o:%.cpp
	$(CXX) -c -o $@ $< $(CPPFLAGS)
# the objects used to build a shared library
$(others):%.o:%.cpp
	$(CXX) -c -fpic -o $@ $< $(CPPFLAGS)

# include dependencies
include $(SOURCES:.cpp=.d)

# automatically generate dependencies
%.d:%.cpp
	@echo "Creating $@ ..."
	@set -e; rm -f $@; \
	$(CXX) -MM $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

# to clean all the files generated by the compiler
.PHONY : cleanall cleanobj cleandp cleanlib
cleanall : cleanobj cleandp cleanlib
	-rm $(EXE)
cleanobj :
	-rm $(OBJS)
cleandp :
	-rm *.d
cleanlib :
	-rm *.so